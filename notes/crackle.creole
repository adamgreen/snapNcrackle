== crackle - Disk Imaging Utility
This custom disk imaging utility exists to facilitate the building of disk images for the 
[[https://github.com/jmechner/Prince-of-Persia-Apple-II | Prince of Persia (Apple II version) project]].  There already
exist tools like [[http://ciderpress.sourceforge.net | Ciderpress]] which can create disk images for the Apple II
computer and they are better suited to general Apple II disk image creation.  The crackle utilitiy was created
specifically for some unique requirements of the Prince of Persia (PoP) build process.  These include:

* In the PoP assembly language sources, USR directives were used to write the object file out to disk directly in the
  required location using the RW18 file system API.  My snap assembler doesn't support this direct interaction with the
  RW18 API but instead saves out an object file with a special header that will let the crackle application know where
  it should place the file in the image.
* Understands the RW18 disk format used by Prince of Persia.
* The image tables found here,
  [[https://github.com/jmechner/Prince-of-Persia-Apple-II/tree/master/01%20POP%20Source/Images]], contain addresses set
  to work if the image table was loaded at an address of $6000.  The snap utility has the ability to rebase these image
  tables based on where they will actually be loaded into memory.  It also truncates the image tables and only writes
  out the active table entries and not any of the overflow if the file happens to be larger than required in the
  repository.


== Command Line
The crackle command line has the following format:
{{{
crackle --format image_format scriptFilename outputImageFilename
}}}

The format, scriptFilename, and outputImageFilename are all required parameters.  The meaning of these parameters
follow:

* {{{--format image_format}}} - Indicates the type of outputImage to be created.  image_format can be one of:
** **nib_5.25** - Creates a nibble image for a 5 1/4" disk.
** **hdv_3.5** - Creates a .HDV block image for a 3 1/2" disk.
* {{{scriptFilename}}} - Specifies the name of the input script to be used for placing data in the image file.  The
                         format of the lines in this script file will be described in the next section.
* {{{outputImageFilename}}} - Indicates the name to be given to the disk image created.


== Script File
The crackle scripts files are text based files where the lines contain comma separated values indicating which file
data should be placed where in the disk image.  Each line of the script provided to crackle can be one of 3
formats: **BLOCK**, **RWTS16**, or **RW18**.

===BLOCK
These lines are used to place a block, 512 bytes, of data at specific locations in a ProDOS block ordered image.
Lines of this format are not supported when writing to a nibble formatted disk image.  In those situations, you would
probably want to use the RWTS16 format instead.

The lines of the block format should have the following form:
{{{
BLOCK,objectFilename,startOffset,length,block[,intraBlockOffset]
}}}

**BLOCK** - Indicates that this is a BLOCK formatted line.  This is a required field.\\
**objectFilename** - Which data file should be read and placed into the disk image by this line of the script.  This is
                     a required field.\\
**startOffset** - At what offset should the reads from within objectFilename begin.  Typically you will want to start
                  at the beginning of the file so specifying 0 for this field would be the appropriate action.  This is
                  a required field.\\
**length** - How many bytes should be read from within the objectFilename to be placed in the disk image.  You can use
             an asterisk, '*', in this field to indicate the full length of the object file.  This is a required
             field.\\
**block** - At what block in the output disk image, should this file's data be inserted.  You can use an asterisk, '*',
            in this field to indicate that the data should be inserted where the data from the previous script line
            ended.  This allows placing data from different files back to back in the output disk image.  This is a
            required field.\\
**intraBlockOffset** - The destination of the data doesn't have to be at the beginning of a 512 byte block.  This
                       optional intra block offset accepts a value of 0 - 511 to indicate at what offset within the 
                       block the data should be inserted.\\
                       
===RWTS16
These lines are used to place data at specific locations in a nibble disk image using Apple's RWTS16 encoding format.
Lines of this format are not supported when writing to a block formatted disk image.  In those situations, you would
probably want to use the BLOCK format instead.

The lines of this format should have the following form:
{{{
RWTS16,objectFilename,startOffset,length,track,sector
}}}

**RWTS16** - Indicates that this is a RWTS16 formatted line.  This is a required field.\\
**objectFilename** - Which data file should be read and placed into the disk image by this line of the script.  This is
                     a required field.\\
**startOffset** - At what offset should the reads from within objectFilename begin.  Typically you will want to start
                  at the beginning of the file so specifying 0 for this field would be the appropriate action.  This is
                  a required field.\\
**length** - How many bytes should be read from within the objectFilename to be placed in the disk image.  You can use
             an asterisk, '*', in this field to indicate the full length of the object file.  This is a required
             field.\\
**track** - At what track in the output disk image, should this file's data be inserted.  The allowed values are 0 - 34.
            This is a required field.\\
**sector** - At what sector within the specified track in the output disk image, should this file's data be inserted.
             The allowed values are 0 - 15.  This is a required field.\\

===RWTS16CP
This line is used to place a specially crafted "copy protection" sector in a nibble disk image.  The sector is checked by
the secondary protection check code in the 5.25" diskette version of Prince of Persia.
Lines of this format are not supported when writing to a block formatted disk image.  In those situations, you would
probably want to use the BLOCK format instead.

The lines of this format should have the following form:
{{{
RWTS16CP,track,sector
}}}

**RWTS16CP** - Indicates that this is a RWTS16CP formatted line.  This is a required field.\\
**track** - At what track in the output disk image, should this file's data be inserted.  The allowed values are 0 - 34.
            This is a required field.\\
**sector** - At what sector within the specified track in the output disk image, should this file's data be inserted.
             The allowed values are 0 - 15.  This is a required field.\\

===RW18
These lines are used to place data at specific locations in a disk image using the RW18 format created by
Roland Gustafsson.  This format was used by Prince of Persia and other Apple II titles from Br√∏derbund.

The lines of this format should have the following form:
{{{
RW18,objectFilename,startOffset,length,side,track,intraTrackOffset[,imageTableAddress]
}}}

**RW18** - Indicates that this is a RW18 formatted line.  This is a required field.\\
**objectFilename** - Which data file should be read and placed into the disk image by this line of the script.  This is
                     a required field.\\
**startOffset** - At what offset should the reads from within objectFilename begin.  Typically you will want to start
                  at the beginning of the file so specifying 0 for this field would be the appropriate action.  This is
                  a required field.\\
**length** - How many bytes should be read from within the objectFilename to be placed in the disk image.  You can use
             an asterisk, '*', in this field to indicate the full length of the object file.  This is a required
             field.\\
**side** - At what side of the output disk image (for 3.5" disk images where virtualized sides are used within the RW18
           disk format), should this file's data be inserted.  The allowed values are 0xa9 for side 1, 0xad for side 2,
           and 0x79 for side 3.  You can also use an asterisk, '*', in this field when objectFilename points to an object
           saved out by snap in response to an USR directive as its header will indicate the desired side.  This is
           a required field.\\
**track** - At what track in the output disk image, should this file's data be inserted.  The allowed values are 0 - 34.
            You can also use an asterisk, '*', in this field when objectFilename points to an object saved out by snap
            in response to an USR directive as its header will then indicate the desired track.  This is a required
            field.\\
**intraTrackOffset** - The destination of the data doesn't have to be at the beginning of the track.  This intratrack
                       offset accepts a value of 0 - 4607 to indicate at what offset within the track the data should be
                       inserted.  You can also use an asterisk, '*', in this field when objectFilename points to an
                       object saved out by snap in response to an USR directive as its header will indicate the desired
                       offset.  This is a required field.\\
**imageTableAddress** - When objectFilename is an image table used by Prince of Persia, this optional field indicates
                        the address in memory where the table will be loaded.  Specifying this values will direct the
                        crackle utility to remap the table entries to this new base address and also truncate the input
                        data so that only active images are inserted into the output disk image.\\
